// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  directUrl=env("DIRECT_URL")
  url      = env("DATABASE_URL")
}


model User{
  id        String @id @default(uuid())
  email     String @unique
  name      String
  password  String
  posts     Post[]
  savedPosts String[]
  likedPosts String[]
  notifiaciton Notification?
}

model Notification{
  id      String      @id @default(uuid())
  user    User        @relation(fields: [userId],references: [id])
  userId  String      @unique
  comment Comments[] 
  replies Replies[]
}

model Post{
  id        String @id @default(uuid())
  title     String 
  content   String
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  String
  likes     Int    @default(0)
  date      DateTime @default(now())
  comments  Comments[]
}

model Comments{
  id              String        @id @default(uuid())
  userId          String   
  user            String?    
  comment         String
  date            DateTime      @default(now())
  claps           Int           @default(0)
  postId          String
  post            Post          @relation(fields: [postId],references: [id])
  notification    Notification  @relation(fields: [notificationId],references: [id]) 
  notificationId  String
  flagNotified    Boolean       @default(false)
  Replies         Replies[]
  replyCount      Int           @default(0)
}

model Replies{
  id              String    @unique @default(uuid())
  reply           String    
  user            String
  claps           Int       @default(0)
  commentId       String
  replies         Comments  @relation(fields: [commentId],references: [id])
  date            DateTime  @default(now())
  notification    Notification  @relation(fields: [notificationId],references: [id]) 
  notificationId  String
  flagNotified    Boolean   @default(false)
}